name: ðŸ“¸ Paparazzi Golden Images
run-name: ðŸ“¸ Paparazzi Golden Images [${{ inputs.ref }}]

on:
  workflow_dispatch:
    inputs:
      ref:
        description: PR number, branch, or url
        required: false
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  paparazzi-golden-images:
    if: contains(fromJson(vars.AUTHORIZED_ACTORS || '[]'), github.actor)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: setup-bot
        uses: ./.github/actions/setup-bot
        with:
          app-id: ${{ vars.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_PRIVATE_KEY }}
      - uses: actions/checkout@v4
        with:
          lfs: true
          token: ${{ steps.setup-bot.outputs.token }}
      - if: inputs.ref != ''
        run: gh pr checkout "$INPUT_REF"
        env:
          INPUT_REF: ${{ inputs.ref }}
          GH_TOKEN: ${{ steps.setup-bot.outputs.token }}

      - uses: ./.github/actions/check-git-lfs
      - uses: ./.github/actions/setup-java
      - uses: ./.github/actions/setup-gradle
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
      - uses: ./.github/actions/setup-gradle-properties

      - run: ./gradlew cleanRecordScreenshots
      - run: |
          git status --porcelain
          git add -- '**/src/test/snapshots/**/*.png'
  
          if ! git diff --cached --quiet --exit-code -- '**/src/test/snapshots/**/*.png' ; then
            git commit -m "ðŸ“¸ Update Paparazzi golden images" -- '**/src/test/snapshots/**/*.png'
            git show
  
            if [[ -z "${INPUT_REF}" ]]; then
              new_pr_branch="paparazzi/$GITHUB_RUN_ID-$GITHUB_RUN_NUMBER"
              git switch --create "$new_pr_branch"
              git push origin "$new_pr_branch"
              gh pr create \
                --title "ðŸ“¸ Update Paparazzi golden images" --fill \
                --base "$GITHUB_REF_NAME" --head "$new_pr_branch" \
                --assignee "$GITHUB_TRIGGERING_ACTOR"
            else
              git push
            fi
            echo "::notice::UPDATED"
          else
            echo "::notice::UP-TO-DATE"
          fi
        env:
          INPUT_REF: ${{ inputs.ref }}
          GH_TOKEN: ${{ steps.setup-bot.outputs.token }}
